name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

env:
  REGISTRY: 200582.azurecr.io
  BACKEND_IMAGE_NAME: 200582.azurecr.io/farmnote-backend:latest
  FRONTEND_IMAGE_NAME: 200582.azurecr.io/farmnote-frontend:latest

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
      - name: Lint with pylint
        run: |
          pylint backend --fail-under 5
      - name: Test with pytest
        run: |
          pytest

  deploy:
    needs:
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.AZURE_USERNAME }}
          password: ${{ secrets.AZURE_PASSWORD }}

      # Build and push Docker image for backend
      - name: Build and push Docker image for backend
        id: build-and-push-backend
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: backend
          tags: ${{ env.BACKEND_IMAGE_NAME }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # # Build and push Docker image for frontend
      # - name: Build and push Docker image for frontend
      #   id: build-and-push-frontend
      #   uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      #   with:
      #     context: frontend  # Assuming your frontend code is in a directory named 'frontend'
      #     tags: ${{ env.FRONTEND_IMAGE_NAME }}
      #     push: ${{ github.event_name != 'pull_request' }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
