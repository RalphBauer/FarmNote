/* tslint:disable */
/* eslint-disable */
/**
 * FarmNote
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: r206067@fhwn.ac.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema of a note
 * @export
 * @interface Note
 */
export interface Note {
    /**
     * 
     * @type {string}
     * @memberof Note
     */
    content: string;
    /**
     * 
     * @type {number}
     * @memberof Note
     */
    latitude: number;
    /**
     * 
     * @type {number}
     * @memberof Note
     */
    longitude: number;
    /**
     * 
     * @type {number}
     * @memberof Note
     */
    field_id: number;
        /**
     *
     * @type {number}
     * @memberof Note
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Note
     */
    sessionId: number;
    /**
     * 
     * @type {Date}
     * @memberof Note
     */
    creationDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof Note
     */
    updatedDate: Date;
}

/**
 * Check if a given object implements the Note interface.
 */
export function instanceOfNote(value: object): value is Note {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('field_id' in value) || value['field_id'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
    if (!('creationDate' in value) || value['creationDate'] === undefined) return false;
    if (!('updatedDate' in value) || value['updatedDate'] === undefined) return false;
    return true;
}

export function NoteFromJSON(json: any): Note {
    return NoteFromJSONTyped(json, false);
}

export function NoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Note {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'field_id': json['field_id'],
        'id': json['id'],
        'sessionId': json['session_id'],
        'creationDate': (new Date(json['creation_date'])),
        'updatedDate': (new Date(json['updated_date'])),
    };
}

export function NoteToJSON(value?: Note | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'content': value['content'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'field_id': value['field_id'].toString(),
        'id': value['id'],
        'session_id': value['sessionId'],
        'creation_date': ((value['creationDate']).toISOString()),
        'updated_date': ((value['updatedDate']).toISOString()),
    };
}

