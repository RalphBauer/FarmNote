/* tslint:disable */
/* eslint-disable */
/**
 * FarmNote
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: r206067@fhwn.ac.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Note } from './Note';
import {
    NoteFromJSON,
    NoteFromJSONTyped,
    NoteToJSON,
} from './Note';

/**
 * Schema of a session
 * @export
 * @interface Session
 */
export interface Session {
    /**
     * 
     * @type {string}
     * @memberof Session
     */
    token: string;
    /**
     * 
     * @type {number}
     * @memberof Session
     */
    id: number;
    /**
     * 
     * @type {Array<Note>}
     * @memberof Session
     */
    notes?: Array<Note>;
}

/**
 * Check if a given object implements the Session interface.
 */
export function instanceOfSession(value: object): value is Session {
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function SessionFromJSON(json: any): Session {
    return SessionFromJSONTyped(json, false);
}

export function SessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Session {
    if (json == null) {
        return json;
    }
    return {
        
        'token': json['token'],
        'id': json['id'],
        'notes': json['notes'] == null ? undefined : ((json['notes'] as Array<any>).map(NoteFromJSON)),
    };
}

export function SessionToJSON(value?: Session | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'token': value['token'],
        'id': value['id'],
        'notes': value['notes'] == null ? undefined : ((value['notes'] as Array<any>).map(NoteToJSON)),
    };
}

